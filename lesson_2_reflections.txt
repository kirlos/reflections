What happens when you initialize a repository? Why do you need to do it?
When you initialize a git repository, git creates the requisite files for project tracking. It needs to be done in order to prepare a project for commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area does not necessarily include all the files from the working directory, and controls what ends up in the repository. It allows choice on which files in a project are committed to the repository.

How can you use the staging area to make sure you have one commit per logical change?
You can place only files that are part of a particular logical change in the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are useful for making experimental changes, for creating versions that differ significantly form the master (different languages for example.) Separate branches help keep track changes separately so that you can still work on both projects and keep track of commits.

How do the diagrams help you visualize the branch structure?
They allow me to see where commits fall in the various branches.


